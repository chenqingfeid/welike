package com.redefine.welike.base.dao.welike;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.redefine.welike.base.dao.welike.Profile;
import com.redefine.welike.base.dao.welike.SearchHistory;
import com.redefine.welike.base.dao.welike.TopicSearchHistory;
import com.redefine.welike.base.dao.welike.User;
import com.redefine.welike.base.dao.welike.Draft;

import com.redefine.welike.base.dao.welike.ProfileDao;
import com.redefine.welike.base.dao.welike.SearchHistoryDao;
import com.redefine.welike.base.dao.welike.TopicSearchHistoryDao;
import com.redefine.welike.base.dao.welike.UserDao;
import com.redefine.welike.base.dao.welike.DraftDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig profileDaoConfig;
    private final DaoConfig searchHistoryDaoConfig;
    private final DaoConfig topicSearchHistoryDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig draftDaoConfig;

    private final ProfileDao profileDao;
    private final SearchHistoryDao searchHistoryDao;
    private final TopicSearchHistoryDao topicSearchHistoryDao;
    private final UserDao userDao;
    private final DraftDao draftDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        profileDaoConfig = daoConfigMap.get(ProfileDao.class).clone();
        profileDaoConfig.initIdentityScope(type);

        searchHistoryDaoConfig = daoConfigMap.get(SearchHistoryDao.class).clone();
        searchHistoryDaoConfig.initIdentityScope(type);

        topicSearchHistoryDaoConfig = daoConfigMap.get(TopicSearchHistoryDao.class).clone();
        topicSearchHistoryDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        draftDaoConfig = daoConfigMap.get(DraftDao.class).clone();
        draftDaoConfig.initIdentityScope(type);

        profileDao = new ProfileDao(profileDaoConfig, this);
        searchHistoryDao = new SearchHistoryDao(searchHistoryDaoConfig, this);
        topicSearchHistoryDao = new TopicSearchHistoryDao(topicSearchHistoryDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        draftDao = new DraftDao(draftDaoConfig, this);

        registerDao(Profile.class, profileDao);
        registerDao(SearchHistory.class, searchHistoryDao);
        registerDao(TopicSearchHistory.class, topicSearchHistoryDao);
        registerDao(User.class, userDao);
        registerDao(Draft.class, draftDao);
    }
    
    public void clear() {
        profileDaoConfig.clearIdentityScope();
        searchHistoryDaoConfig.clearIdentityScope();
        topicSearchHistoryDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        draftDaoConfig.clearIdentityScope();
    }

    public ProfileDao getProfileDao() {
        return profileDao;
    }

    public SearchHistoryDao getSearchHistoryDao() {
        return searchHistoryDao;
    }

    public TopicSearchHistoryDao getTopicSearchHistoryDao() {
        return topicSearchHistoryDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public DraftDao getDraftDao() {
        return draftDao;
    }

}
